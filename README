=======
Simblin
=======

*Sim*ple *B*log Eng*in*e - A blog engine written with Flask and SQLAlchemy.

Simblin is built to be used by only one author. Simblin has no dashboard, no
plugin support and no theme support although the templates and css can be
modified by hand, of course. Simblin does not provide its own comment system
but has support for Disqus.

On the other hand Simblin delivers most features that are needed to provide a
good blogging experience. Simblin has 

* tags and categories 
* markdown support
* archives
* source code highlighting

See the changelog to see what featueres a specific version provides.


Configuration
=============

TODO: This needs work

Don't forget version numbers!
* Link to deployment section of flask

requires flask and everything that flask requires

first run `python initdb.py` then run `python run.py`

put your real settings in a file called `settings.cfg`. You can look at
`default-settings.cfg` to get an idea.

Use a python shell to create a secret key:

    >>> import os
    >>> os.urandom(24)
    '\xfd{H\xe5<\x95\xf9\xe3\x96.5\xd1\x01O<!\xd5\xa2\xa0\x9fR"\xa1\xa8' 

Use `nosetests test` to run tests


Q&A
===

How to create pages?
--------------------

Pages are just blog posts. Just "hardcode" the link to a specific blog post in
your template. For example, if you want to have an `About` page put

    "{{ url_for('show_post', slug='about') }}"
    
in the `href` attribute of the link in your template to the `About` page.

This is not needed but I would recommend to put all blog posts which are
supposed to be pages in the category `Pages` and additionally I would disable
comments on them.


How to use source code highlighting?
------------------------------------

Source code highlighting is enabled by the `CodeColor` extension of `Markdown2` 
and you don't have to be afraid to use underscores in your code thanks to the
`CodeFriendly` extension.

  codecolor: http://code.google.com/p/python-markdown2/wiki/CodeColor
  codefriendly: http://code.google.com/p/python-markdown2/wiki/CodeFriendly


What's the difference between categories and tags in Simblin?
-------------------------------------------------------------

Tags ought to describe the content of a blog post (what is it about?).
Categories on the other hand ought to state where a blog post belongs in.
Sometimes, however, the distinction between categories and tags is not clear.
 
Suppose you create a programming tutorial. One possibility is to not put it in a
category at all and instead tag it with `programming` and `tutorial`. Another
possiblity is to put it in the category `programming` and tag it with
`tutorial`. I, however, would put the post in the categories `programming` *and*
`tutorial` and add tags like `django` if, for instance, the tutorial is about
django.

Since a blog post, in my world view, can belong in different places it should be
able to be attached to several categories, too. Therefore categories are
essentially implemented like tags. However, tags are deleted automatically when
no posts reference a tag anymore. Categories are not.


How to change username/password/email?
--------------------------------------

Once you registered you can go to `http://yourblog.com/register` to "reregister"
with new credentials. You must be logged in to do this. Beware: If you forget
to register with new credentials anybody who visits the blog can register as
the admin.

  
Why another blog engine?
========================

1. Learn about web programming in general
2. Become more experienced with the excellent Flask framework 
3. Have a perfectly tailored blog for my website


Used libraries/frameworks
=========================

* markdown2: http://code.google.com/p/python-markdown2/
* flask: http://flask.pocoo.org/
* sqlalchemy: http://www.sqlalchemy.org/
