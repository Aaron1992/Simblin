* Style orientation 
** http://demo.jimbarraud.com/manifest/
** http://tomayko.com/ (i like the position of the date)
*** Restyle, like http://tomayko.com/, on entry view no navigation, bigger font...


* Ordering of Blog posts, e.g. (Archive Page creation)
** Monghtly/Yearly archive
** Tag Cloud
* Page creation
** Add field `comments_allowed' to Entry model
** Just Convention: Put your "pages" in category pages and harcode their link
   on a menu entry of your template and don't allow comments
*** Update Readme to reflect changed opinion about pages
* Javascript confirmation dialog when clicking delete entry instead of separate page
* Reregistration; don't show (if loggend in): "there can only be one" but allow
  Reregistration if logged in user puts right password in (that is: simply
  delete admin from db and relink to register page)
* Link "Show source" (only on entry page) that opens the pure mkd source of the blog post in a new window
* Only show login/compose on mouseover
* Proper Logging (read flask logging docs)
* Refactor post.published to post.datetime
* Improve Test suite
* grep TODOs
* Look with epydoc where forgot comments, look with pyflakes
* Refactor
** how to improve test suite? see danjac
** how to prevent duplicates in database upon sqlalchemy object creation (__new__)
** Comments/Documentation ok?
* Document/Readme/Changelog

-> v0.2
-> Deployment http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/
   http://flask.pocoo.org/docs/patterns/fabric/
   http://flask.pocoo.org/docs/config/#config
   http://flask.pocoo.org/docs/deploying/mod_wsgi/

----------------

* rename categories
* Tab key does indent in compose editor / embed bespin
* Pingback/Traceback (or does Disqus already do that?)
* Images / File Attachments (or use dropbox? or use stuff.eugenkiss.com/blog/? is that a good idea?)
** How to store them?
** Write Q&A that images/files should be just uploaded to a folder and linked in a blog post
* Comments (Disqus)
* Refactor/Tests/Document/Readme/Changelog

-> v0.3

----------------

future:
* Put hardcoded Messages in config file
* statistics
* memcache/redis
* "high level" documentation (use github wiki support! http://github.com/blog/699-making-github-more-open-git-backed-wikis)
* own comments?
* bespin embedded for textarea
* search (http://pypi.python.org/pypi/Whoosh/)
* feeds
* profiling (how?) in order to improve performance (archives view esp.)
* Javascript Tag suggestion
* mail notification (optional angabe of e-mail upon registration)
* modal dialogs form confirmations (with jquery)
* Add smarty pants ``''
* Update markdown2 lib
