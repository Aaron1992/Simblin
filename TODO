* grep TODOs
* Look with epydoc where forgot comments, look with pyflakes
* Refactor
** how to improve test suite? see danjac
** how to prevent duplicates in database upon sqlalchemy object creation (__new__)
** Comments/Documentation/Style of Coding ok?
* Document/Readme/Changelog

-> v0.2
-> Deployment http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/
   http://flask.pocoo.org/docs/patterns/fabric/
   http://flask.pocoo.org/docs/config/#config
   http://flask.pocoo.org/docs/deploying/mod_wsgi/

----------------

* Proper Logging (read flask logging docs)
* Tab key does indent in compose editor / embed bespin
* Pingback/Traceback (or does Disqus already do that?)
* Images / File Attachments (or use dropbox? or use stuff.eugenkiss.com/blog/? is that a good idea?)
** How to store them?
** Write Q&A that images/files should be just uploaded to a folder and linked in a blog post
* Comments (Disqus)
* Refactor/Tests/Document/Readme/Changelog

-> v0.3

----------------

future:
* be able to rename categories
* Add to config sqlalchemy pw and username for other db engines than sqlite
* Put hardcoded Messages in config file
* statistics
* memcache/redis
* "high level" documentation (use github wiki support! http://github.com/blog/699-making-github-more-open-git-backed-wikis)
* own comments?
* bespin embedded for textarea
* search (http://pypi.python.org/pypi/Whoosh/)
* feeds
* profiling (how?) in order to improve performance (archives view esp.)
* Javascript Tag suggestion
* mail notification (optional angabe of e-mail upon registration)
* modal dialogs form confirmations (with jquery)
* Add smarty pants ``''
* Update markdown2 lib
